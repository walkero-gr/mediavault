
  Notes relating to project: MediaVault

*************************************************************





//// TO DO
*******

DONE - Open libraries manually
DONE - Update the Makefile.docker to compile
- Setup CI/CD
DONE - Create first window
DONE - Create about window
- Connect filetypes with players
- Make preferences window
- Show metadata in the window
- Add images on lists (optional)
DONE - Create Project menu
DONE - Make Iconify menu item to work
DONE - Make About menu item to open the about window
DONE - Make Quit menu item to quit the app

## Radio
DONE - Add Radio filter section with fields at the top of the window (Genre, Language, Country, Name)
DONE - Make request based on info at the search fields
DONE - Parse JSON response
DONE - Break getRadioStations() to smaller methods
DONE - Load results into a linked list
DONE - List radio stations
- Double click on a station to play on player
- Use ToolTypes to set the player and the arguments (optional)
- Click on a station and show it's info at the side, with logo
- Mark stations as favorites

## Podcasts

## UPnP
DONE - Create a unique list of the UPnP servers
DONE - Move UPnP functions to separate source file
- Get the server metadata for each UPnP server and add them at the UPnP server list
- Make a SOAP request function
- Create the first browse request
- Create server list
- Click on window server list and make Browse SOAP request

//// BUGS
******
FIXED - When ooNetwork is used I get some unfreed signals on exit
- ooNetwork truncates the return info, so for now only 5 items return 

/* V52.7 : Execute <command> asynchronusly
   V52.9 : Simplified launch routine
   V52.12: Uses wb_lib (reads icon tooltypes)
*/
BOOL beginCommand(char *command)
{
 return IWorkbench->OpenWorkbenchObject(command, TAG_DONE); //V52.12: Uses wb_lib (reads icon tooltypes)
 
// return IDOS->SystemTags(command, SYS_Input,NULL, SYS_Output,NULL, /*SYS_Error,NULL,*/
//                         NP_Priority,0, SYS_Asynch,TRUE, TAG_END); //V52.9 : Simplified launch routine
}

				unarc_cmd = IUtility->ASPrintf("c:xadUnFile FROM \"%s\" DESTDIR %s NT", ComicPathName, unarc_folder_path);
				//IDOS->Printf( "Unarc CMD \n%s\n", unarc_cmd );
				
				IDOS->SystemTags(unarc_cmd, SYS_Input,ZERO,
						SYS_Output,NULL,
						SYS_Error,ZERO,
						SYS_Asynch,FALSE,
					TAG_DONE); 